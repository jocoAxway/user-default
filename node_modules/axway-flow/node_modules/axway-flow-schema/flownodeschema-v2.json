{
	"$schema": "http://json-schema.org/draft-06/schema#",
	"id": "http://axway.com/schemas/flownode-v2.json",
	"title": "Flow-node Schema",
	"description": "The schema for a flow-node definition.",
	"type": "object",
	"properties": {
		"schemaVersion": {
			"description": "The flow-node schema version.",
			"type": "string",
			"enum": [
				"2"
			]
		},
		"name": {
			"type": "string",
			"description": "The name of the flow-node as it would appear in the UI."
		},
		"description": {
			"type": "string",
			"description": "A description of the flow-node and what it does."
		},
		"icon": {
			"description": "An icon for the flow-node.  Supports image data URI scheme, fontawesome icon names, or reference to file.",
			"$ref": "#/definitions/icon"
		},
		"type": {
			"type": "string",
			"description": "An type identifier that uniquely identifies the type of node and is used in the flow when referring to this flow-node."
		},
		"category": {
			"type": "string",
			"description": "The category group under which the flow-node will appear."
		},
		"methods": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/method"
			}
		},
		"deprecated": {
			"description": "Indicates that this flow-node is no longer supported and may be removed in the future.",
			"oneOf": [
				{
					"type": "boolean",
					"description": "A flag to indicate the flow-node has been deprecated."
				},
				{
					"type": "string",
					"description": "Indicates the flow-node has been deprecated and a descriptive message."
				}
			]
		}
	},
	"required": [
		"schemaVersion",
		"name",
		"type",
		"category",
		"methods"
	],
	"definitions": {
		"output-spec": {
			"id": "#output-spec",
			"description": "Detail for handling the output of the flow-node.",
			"type": "object",
			"properties": {
				"name": {
					"type": "string",
					"description": "The name of the output."
				},
				"description": {
					"type": "string",
					"description": "A description of the output."
				},
				"context": {
					"oneOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					]
				},
				"schema": {
					"$ref": "http://json-schema.org/draft-06/schema#"
				}
			}
		},
		"inputParameters": {
			"type": "object",
			"description": "An object that describes a set of parameter inputs",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"object"
					]
				},
				"properties": {
					"type": "object",
					"additionalProperties": {
						"allOf": [
							{
								"type": "object",
								"properties": {
									"group": {
										"type": "string"
									}
								}
							},
							{
								"$ref": "http://json-schema.org/draft-06/schema#"
							}
						]
					}
				},
				"required": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				},
				"additionalProperties": {
					"type": "boolean",
					"enum": [
						false
					]
				}
			},
			"required": [
				"properties",
				"additionalProperties"
			],
			"additionalProperties": false
		},
		"method": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string",
					"description": "The name of the flow-node method as it would appear in the UI."
				},
				"description": {
					"type": "string",
					"description": "A brief description of the parameter."
				},
				"authorization": {
					"$ref": "#/definitions/inputParameters",
					"description": "An object that describes the set of authorization parameter inputs required for the method."
				},
				"parameter": {
					"$ref": "#/definitions/inputParameters",
					"description": "An object that describes a set of parameter inputs for the method."
				},
				"outputs": {
					"additionalProperties": {
						"$ref": "#/definitions/output-spec"
					}
				}
			},
			"required": [
				"description",
				"parameter",
				"outputs"
			]
		},
		"dataImageURI": {
			"type": "string",
			"pattern": "^data:image/(?:bmp|jpeg|png|gif|tiff|svg\\+xml);base64,.*"
		},
		"icon": {
			"oneOf": [
				{
					"type": "string",
					"pattern": "^(?!data:image).*"
				},
				{
					"$ref": "#/definitions/dataImageURI"
				}
			],
			"default": "heart-o"
		}
	}
}
