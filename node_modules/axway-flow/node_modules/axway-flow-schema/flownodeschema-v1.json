{
	"$schema": "http://json-schema.org/draft-06/schema#",
	"id": "http://axway.com/schemas/flownode-v1.json",
	"title": "Flow-node Schema",
	"description": "The schema for a flow-node definition.",
	"type": "object",
	"additionalProperties": false,
	"properties": {
		"schemaVersion": {
			"description": "The flow node handler schema version.",
			"type": "string",
			"enum": [
				"1"
			]
		},
		"name": {
			"type": "string",
			"description": "The name of the node handler as it would appear in the UI."
		},
		"description": {
			"type": "string",
			"description": "A description of the node handler and what it does."
		},
		"icon": {
			"description": "An icon for the node handler.  Supports image data URI scheme, fontawesome icon names, or reference to file.",
			"$ref": "#/definitions/icon"
		},
		"type": {
			"type": "string",
			"description": "An type identifier that uniquely identifies the type of node and is used in the flow when referring to this node handler."
		},
		"category": {
			"type": "string",
			"description": "The category group under which the node handler will appear."
		},
		"methods": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/method"
			}
		},
		"deprecated": {
			"description": "Indicates that this node handler is no longer supported and may be removed in the future.",
			"oneOf": [
				{
					"type": "boolean",
					"description": "A flag to indicate the node handler has been deprecated."
				},
				{
					"type": "string",
					"description": "Indicates the node handler has been deprecated and a descriptive message."
				}
			]
		}
	},
	"required": [
		"schemaVersion",
		"name",
		"type",
		"category",
		"methods"
	],
	"definitions": {
		"output-spec": {
			"id": "#output-spec",
			"description": "Detail for handling the output of the nodehandler node.",
			"type": "object",
			"properties": {
				"name": {
					"type": "string",
					"description": "The name of the output."
				},
				"description": {
					"type": "string",
					"description": "A description of the output."
				},
				"context": {
					"oneOf": [
						{
							"type": "string"
						},
						{
							"type": "null"
						}
					]
				},
				"schema": {
					"$ref": "http://json-schema.org/draft-06/schema#"
				}
			},
			"additionalProperties": false
		},
		"method": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string",
					"description": "The name of the node handler method as it would appear in the UI."
				},
				"description": {
					"type": "string",
					"description": "A brief description of the parameter."
				},
				"parameter": {
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"object"
							]
						},
						"properties": {
							"type": "object",
							"additionalProperties": {
								"$ref": "http://json-schema.org/draft-06/schema#"
							}
						},
						"required": {
							"type": "array",
							"uniqueItems": true,
							"items": {
								"type": "string"
							}
						},
						"additionalProperties": {
							"type": "boolean",
							"enum": [
								false
							]
						}
					},
					"required": [
						"properties",
						"additionalProperties"
					],
					"description": "An object that describes a set of parameter inputs into the node handler.",
					"additionalProperties": false
				},
				"outputs": {
					"additionalProperties": {
						"$ref": "#/definitions/output-spec"
					}
				}
			},
			"required": [
				"description",
				"parameter",
				"outputs"
			]
		},
		"dataImageURI": {
			"type": "string",
			"pattern": "^data:image/(?:bmp|jpeg|png|gif|tiff|svg\\+xml);base64,.*"
		},
		"icon": {
			"oneOf": [
				{
					"type": "string",
					"pattern": "^(?!data:image).*"
				},
				{
					"$ref": "#/definitions/dataImageURI"
				}
			],
			"default": "heart-o"
		}
	}
}
