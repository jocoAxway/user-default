const { arrowQueryOptions } = require('../../util');

module.exports = (flowName, operationId, schemaRef, model) => {
	const options = arrowQueryOptions.filter(a => a.name !== 'sel' && a.name !== 'unsel');

	return {
		swagger: '2.0',
		info: {
			title: `${model.name}`,
			version: '1.0.0'
		},
		paths: {
			[`/${model.name.replace(/^.*?\//, '').toLowerCase()}/distinct/{field}`]: {
				get: {
					operationId: `${operationId}`,
					tags: [
						`${model.name}`
					],
					description: `Find distinct ${model.name}`,
					consumes: [],
					produces: [
						'application/json'
					],
					parameters: [
						{
							in: 'path',
							name: 'field',
							description: 'The field name that must be distinct.',
							required: true,
							type: 'string'
						},
						...options
					],
					responses: {
						200: {
							description: 'Distinct fields response',
							schema: {
								type: 'array',
								items: {
									type: 'string'
								},
								uniqueItems: true
							}
						},
						400: {
							description: 'Bad request.'
						},
						401: {
							description: 'This request requires user authentication, as configured by the server.'
						},
						404: {
							description: 'No results were found.'
						},
						500: {
							description: 'Something went wrong during the request; check out the logs on your server.'
						}
					}
				}
			}
		}
	};
};
