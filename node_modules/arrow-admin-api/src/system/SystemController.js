const SystemStatus = require('./SystemStatus');

/**
 * The controller implementing the actions for interacting with the System.
 * @public
 */
class SystemController {
	/**
	 * Create a SystemController.
	 * @param {object} ctx - The context for this controller.
	 * @param {express} ctx.app - The express application.
	 * @param {string} ctx.prefix - The prefix bound to.
	 * @param {APIBuilder} ctx.apibuilder - The API Builder server.
	 * @param {Swagger} ctx.swagger - openapi-doc instance.
	 */
	constructor(ctx) {
		this.ctx = ctx;
	}

	/**
	 * Get the system config.
	 * @return {object} config - The system configuration.
	 * @return {string} config.productName - The product name.
	 * @return {string} config.productRelease - The product release name.
	 * @return {string} config.productVersion - The product version.
	 * @return {string} config.apiPrefix - The url prefix for API requests.
	 */
	getConfig() {
		const apiPrefix = this.ctx.apibuilder.config.apiPrefix || '/api';

		return new Promise((resolve) => {
			resolve({
				productName: 'API Builder',
				productRelease: this.ctx.apibuilder.constructor.Release,
				productVersion: this.ctx.apibuilder.constructor.Version,
				apiPrefix
			});
		});
	}

	/**
	 * Get the system status.
	 * @return {SystemStatus} status - Always ok if you get this far.
	 */
	getStatus() {
		return new Promise((resolve) => {
			resolve(new SystemStatus('ok'));
		});
	}
}

exports = module.exports = SystemController;
