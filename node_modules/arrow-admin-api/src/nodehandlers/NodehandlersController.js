const BadRequestError = require('../errors/BadRequestError');
const NotFoundError = require('../errors/NotFoundError');

/**
 * The controller implementing the actions for interacting with node handlers.
 * @public
 */
class NodehandlersController {
	/**
     * Create a NodehandlersController.
     * @param {object} ctx - The context for this controller.
     * @param {express} ctx.app - The express application.
     * @param {string} ctx.prefix - The prefix bound to.
     * @param {APIBuilder} ctx.apibuilder - The API Builder server.
     * @param {Swagger} ctx.swagger - openapi-doc instance.
     */
	constructor(ctx) {
		this.ctx = ctx;
		this.logger = this.ctx.apibuilder.logger;
	}

	getFlowNodeSpec(specType) {
		if (!specType) {
			return Promise.reject(new BadRequestError());
		}
		return new Promise((resolve, reject) => {
			let spec;
			try {
				spec = this.ctx.apibuilder.getRegisteredNodeSpec(specType);
			} catch (e) {
				return reject(new BadRequestError(e.message));
			}
			if (!spec) {
				return reject(new NotFoundError());
			}
			return resolve(spec);
		});
	}

	getFlowNodeSpecs() {
		return new Promise((resolve, reject) => {
			const specs = this.ctx.apibuilder.getRegisteredNodeSpecs();
			if (!specs) {
				return reject(new BadRequestError());
			}
			return resolve(specs);
		});
	}
}

exports = module.exports = NodehandlersController;
