/**
 * The summary of the service details.
 * Information from the service's package.json and the API Builder config.
 * @public
 */
class ProjectSummary {
	/**
     * Create a ProjectSummary.
     *
     * @param {object} projectSummary - The values to initialize this ProjectSummary with.
     */
	constructor(projectSummary) {
		Object.assign(this, projectSummary);
	}

	/**
     * The swagger schema for a ProjectSummary.
     * @return {object} - The schema for a ProjectSummary.
     */
	static get schema() {
		return {
			title: 'Service Summary',
			type: 'object',
			properties: {
				name: {
					type: 'string'
				},
				version: {
					type: 'string'
				},
				author: {
					type: 'string'
				},
				description: {
					type: 'string'
				},
				license: {
					type: 'string'
				},
				apikey: {
					type: 'string'
				},
				apiPrefixSecurity: {
					type: 'string'
				}
			},
			required: [
				'name'
			]
		};
	}

	/**
     * Validate that object is a ProjectSummary.
     * @param {ProjectSummary|object} projectSummary - The object to validate.
     * @return {boolean} - true if the object is a valid ProjectSummary.
     */
	static validate(projectSummary) {
		let valid = true;
		this.schema.required.forEach(prop => {
			if (!projectSummary.hasOwnProperty(prop)) {
				valid = false;
			}
		});

		return valid;
	}
}

exports = module.exports = ProjectSummary;
