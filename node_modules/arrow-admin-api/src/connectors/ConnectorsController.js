class ConnectorsController {
	constructor(ctx) {
		this.ctx = ctx;
	}

	/*
	 * returns an array of installed connectors
	 */
	getConnectors() {
		return new Promise(resolve => {
			const connectors = Object.values(this.ctx.apibuilder.getConnectors())
				.map(meta => {
					const returnedConnector = {
						name: meta.name,
						description: meta.description || ''
					};
					// only add version if it exists
					if (meta.version) {
						returnedConnector.version = meta.version;
					}
					// indicate if its a service connector
					if (meta.type && meta.type === 'serviceconnector') {
						returnedConnector.isServiceConnector = true;
					}
					return returnedConnector;
				})
				.sort((a, b) => {
					// sort by name - built-in comes first
					if (a.version === 'built-in' && b.version !== 'built-in') {
						return -1;
					} else if (b.version === 'built-in' && a.version !== 'built-in') {
						return 1;
					}
					return a.name.localeCompare(b.name);
				});
			resolve(connectors);
		});
	}
}

exports = module.exports = ConnectorsController;
