const Codeblock = require('./Codeblock');
const BadRequestError = require('../errors/BadRequestError');
const NotFoundError = require('../errors/NotFoundError');

/**
 * The controller implementing the actions for interacting with Codeblocks.
 * @public
 */
class CodeblockController {
	/**
     * Create a CodeblockController.
     * @param {object} ctx - The context for this controller.
     * @param {express} ctx.app - The express application.
     * @param {string} ctx.prefix - The prefix bound to.
     * @param {APIBuilder} ctx.apibuilder - The API Builder server.
     * @param {Swagger} ctx.swagger - openapi-doc instance.
     */
	constructor(ctx) {
		this.ctx = ctx;
	}

	/**
	 * Get codeblock by name.
	 * @param {string} name - The codeblock name.
	 * @return {Codeblock} The codeblock.
	 */
	getCodeblock(name) {
		return new Promise((resolve, reject) => {
			if (!name) {
				return reject(new BadRequestError());
			}

			const codeblock = this.ctx.apibuilder.getCodeblock(name);
			if (!codeblock) {
				return reject(new NotFoundError());
			}
			return resolve(new Codeblock(codeblock));
		});
	}

	/**
	 * Get all the codeblocks.
	 * @return {Array<Codeblock>} The array of Codeblocks.
	 */
	getCodeblocks() {
		return new Promise((resolve) => {
			const codeblocks = this.ctx.apibuilder.getCodeblocks();
			return resolve(
				Object.keys(codeblocks).map(name => codeblocks[name])
			);
		});
	}
}

exports = module.exports = CodeblockController;
