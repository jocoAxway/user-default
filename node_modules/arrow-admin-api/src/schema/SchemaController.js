const axwaySchema = require('axway-schema');
const BadRequestError = require('../errors/BadRequestError');
const NotFoundError = require('../errors/NotFoundError');

/**
 * The controller implementing the actions for interacting with registered schemas.
 * @public
 */
class SchemaController {
	/**
     * Create a SchemaController.
     * @param {object} ctx - The context for this controller.
     * @param {express} ctx.app - The express application.
     * @param {string} ctx.prefix - The prefix bound to.
     * @param {APIBuilder} ctx.apibuilder - The API Builder server.
     * @param {Swagger} ctx.swagger - openapi-doc instance.
     */
	constructor(ctx) {
		this.ctx = ctx;
		this.logger = this.ctx.apibuilder.logger;
	}

	getSchema(id) {
		if (!id) {
			return Promise.reject(new BadRequestError());
		}
		return new Promise((resolve, reject) => {
			const schema = axwaySchema.get(id);
			if (!schema) {
				reject(new NotFoundError());
			} else {
				resolve(schema);
			}
		});
	}

	getSchemas() {
		return new Promise((resolve) => {
			resolve(axwaySchema.get() || []);
		});
	}
}

exports = module.exports = SchemaController;
