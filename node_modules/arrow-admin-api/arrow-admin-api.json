{
	"swagger": "2.0",
	"info": {
		"title": "arrow-admin-api",
		"description": "API Builder Admin API",
		"version": "5.1.11"
	},
	"basePath": "/adminapi/v1",
	"consumes": [
		"application/json"
	],
	"produces": [
		"application/json"
	],
	"paths": {
		"/apis/summary": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/GroupSummary"
							}
						}
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getGroupSummaries",
				"tags": [
					"apis"
				],
				"summary": "Gets an array of API group summaries"
			}
		},
		"/apis/{group}": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/API"
							}
						}
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getGroupEndpoints",
				"tags": [
					"apis"
				],
				"summary": "Gets an array of Endpoints for a group.",
				"parameters": [
					{
						"in": "path",
						"name": "group",
						"type": "string",
						"description": "API group to filter by.",
						"required": true
					}
				]
			}
		},
		"/codeblocks": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "object"
							}
						}
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getCodeblocks",
				"tags": [
					"codeblock"
				],
				"summary": "Gets an array of Codeblocks."
			}
		},
		"/codeblocks/{name}": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getCodeblockByName",
				"tags": [
					"codeblock"
				],
				"summary": "Gets the specified codeblock.",
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"type": "string",
						"description": "Name of codeblock to retrieve.",
						"required": true
					}
				]
			}
		},
		"/config": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ServerConfiguration"
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "listConfigs",
				"tags": [
					"config"
				],
				"summary": "Lists all the server configuration files."
			}
		},
		"/config/{name}": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ServerConfiguration"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getConfig",
				"tags": [
					"config"
				],
				"summary": "Get the specified server configuration file.",
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"type": "string",
						"description": "The name of the configuration file.",
						"required": true
					}
				]
			},
			"put": {
				"responses": {
					"204": {
						"description": "No Content"
					},
					"400": {
						"description": "Bad Request"
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "updateConfig",
				"tags": [
					"config"
				],
				"summary": "Update the configuration file.",
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"type": "string",
						"description": "The name of the configuration file.",
						"required": true
					},
					{
						"in": "body",
						"name": "body",
						"description": "The server configuration to save.",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ServerConfiguration"
						}
					}
				]
			}
		},
		"/connectors": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Connector"
							}
						}
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getConnectors",
				"tags": [
					"connectors"
				],
				"summary": "Gets an array of installed connectors"
			}
		},
		"/credentials": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CredentialDetail"
							}
						}
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getCredentials",
				"tags": [
					"credentials"
				],
				"summary": "Gets an array of managed credentials"
			}
		},
		"/endpoints/validate": {
			"put": {
				"responses": {
					"200": {
						"description": "Validation completed",
						"schema": {
							"type": "object",
							"description": "One or more Swagger (OpenAPI) specification documents"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"413": {
						"description": "Request Entity Too Large"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "validateEndpoint",
				"tags": [
					"endpoint"
				],
				"summary": "Validate an endpoint and return it.",
				"consumes": [
					"multipart/form-data"
				],
				"parameters": [
					{
						"in": "formData",
						"name": "file",
						"description": "Swagger JSON file to validate",
						"type": "file"
					},
					{
						"in": "formData",
						"name": "url",
						"description": "URL to Swagger file to validate",
						"type": "string"
					}
				]
			}
		},
		"/endpoints": {
			"post": {
				"responses": {
					"201": {
						"description": "Created"
					},
					"400": {
						"description": "Bad Request"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "createEndpoint",
				"tags": [
					"endpoint"
				],
				"summary": "Create an Endpoint from swagger",
				"parameters": [
					{
						"in": "body",
						"name": "swagger",
						"schema": {
							"type": "object",
							"description": "One or more Swagger (OpenAPI) specification documents"
						},
						"description": "Swagger document",
						"required": true
					}
				]
			}
		},
		"/endpoints/generate": {
			"post": {
				"responses": {
					"201": {
						"description": "Endpoint was created.",
						"headers": {
							"Location": {
								"description": "The URL to the newly created endpoint.",
								"type": "string"
							}
						}
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "generateEndpoint",
				"tags": [
					"endpoint"
				],
				"summary": "Generate an endpoint.",
				"parameters": [
					{
						"in": "body",
						"name": "endpoint",
						"schema": {
							"type": "object",
							"properties": {
								"model": {
									"type": "string"
								},
								"name": {
									"type": "string",
									"description": "The name for the endpoint."
								},
								"description": {
									"type": "string"
								}
							}
						},
						"description": "Information for endpoint generation.",
						"required": true
					}
				]
			}
		},
		"/endpoints/summary": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/GroupSummary"
						}
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getEndpointSummaries",
				"tags": [
					"endpoint"
				],
				"summary": "Gets an array of Endpoint summaries."
			}
		},
		"/endpoints/{group}": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Endpoints"
						}
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getEndpoints",
				"tags": [
					"endpoint"
				],
				"summary": "Gets an array of Endpoints.",
				"parameters": [
					{
						"in": "path",
						"name": "group",
						"type": "string",
						"description": "API endpoint group to retrieve.",
						"required": true
					}
				]
			}
		},
		"/endpoints/{group}/endpoint": {
			"delete": {
				"responses": {
					"204": {
						"description": "No Content"
					},
					"400": {
						"description": "Bad Request"
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "deleteEndpoint",
				"tags": [
					"endpoint"
				],
				"summary": "Deletes an endpoint from an API group",
				"parameters": [
					{
						"name": "group",
						"in": "path",
						"type": "string",
						"description": "The API group name.",
						"required": true
					},
					{
						"name": "endpoint",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"path": {
									"type": "string",
									"description": "The specified path to delete from."
								},
								"method": {
									"type": "string",
									"description": "The HTTP verb to delete."
								}
							}
						},
						"description": "The API path to delete a method from.",
						"required": true
					}
				]
			}
		},
		"/endpoints/{group}/flow": {
			"post": {
				"responses": {
					"204": {
						"description": "Flow successfully bound"
					},
					"400": {
						"description": "Bad Request"
					},
					"403": {
						"description": "Forbidden (flow already exists)"
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "bindFlow",
				"tags": [
					"endpoint"
				],
				"summary": "Binds a flow to an endpoint.  The flow will be created and the `flowId` will be calculated by using the `operationId` of the endpoint, or by generating a unique id from the endpoint.  If a flow exists with the same `flowId`, the operation will return 403.",
				"parameters": [
					{
						"name": "group",
						"in": "path",
						"type": "string",
						"description": "The API group name.",
						"required": true
					},
					{
						"name": "bind",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"path": {
									"type": "string",
									"description": "The specified path to bind."
								},
								"method": {
									"type": "string",
									"description": "The HTTP verb to bind."
								},
								"flow": {
									"type": "object",
									"description": "The flow to create."
								}
							}
						},
						"description": "The Swagger method and path to bind to a flow.",
						"required": true
					}
				]
			}
		},
		"/flows/{flowId}": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getFlow",
				"tags": [
					"flow"
				],
				"summary": "Gets a flow.",
				"parameters": [
					{
						"in": "path",
						"name": "flowId",
						"type": "string",
						"description": "The unique id of the flow to retrieve.",
						"required": true
					}
				]
			},
			"post": {
				"responses": {
					"204": {
						"description": "No Content"
					},
					"400": {
						"description": "Bad Request"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "updateFlow",
				"tags": [
					"flow"
				],
				"summary": "Updates a flow, or creates it if it does not exist.",
				"parameters": [
					{
						"in": "path",
						"name": "flowId",
						"type": "string",
						"description": "The unique id of the flow to update.",
						"required": true
					},
					{
						"in": "body",
						"name": "flow",
						"schema": {
							"type": "object"
						},
						"description": "The flow to update."
					}
				]
			}
		},
		"/flows/validate": {
			"put": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FlowValidateResponse"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "validateFlow",
				"tags": [
					"flow"
				],
				"summary": "Validates a flow and returns a validation response.  The property `valid` indicates whether or not the flow is valid or not.",
				"parameters": [
					{
						"in": "body",
						"name": "flow",
						"schema": {
							"type": "object"
						},
						"description": "The flow to validate."
					}
				]
			}
		},
		"/models": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Model"
							}
						}
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getModels",
				"tags": [
					"model"
				],
				"summary": "Gets a list of API Builder Models"
			},
			"post": {
				"responses": {
					"201": {
						"description": "Created"
					},
					"400": {
						"description": "Bad Request"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "createModel",
				"tags": [
					"model"
				],
				"summary": "Creates a new model",
				"parameters": [
					{
						"in": "body",
						"name": "definition",
						"schema": {
							"type": "object",
							"properties": {
								"model": {
									"$ref": "#/definitions/Model"
								}
							}
						},
						"description": "API Builder Model definition",
						"required": true
					}
				]
			}
		},
		"/project/summary": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ProjectSummary"
						}
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getProjectSummary",
				"tags": [
					"project"
				],
				"summary": "Get the service summary."
			}
		},
		"/schema": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Schema"
							}
						}
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getSchemas",
				"tags": [
					"schema"
				],
				"summary": "Gets all the registered schemas."
			}
		},
		"/schema/{id}": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Schema"
						}
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getSchemaById",
				"tags": [
					"schema"
				],
				"summary": "Gets the schema by id.",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"type": "string",
						"description": "The schema id.",
						"required": true
					}
				]
			}
		},
		"/system/config": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SystemConfig"
						}
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getSystemConfig",
				"tags": [
					"system"
				],
				"summary": "Gets the system configuration."
			}
		},
		"/system/status": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SystemStatus"
						}
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getSystemStatus",
				"tags": [
					"system"
				],
				"summary": "Check the system is available."
			}
		},
		"/system/reload": {
			"get": {
				"responses": {
					"204": {
						"description": "No Content"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "reloadSystem",
				"tags": [
					"system"
				],
				"summary": "Reloads the server."
			}
		},
		"/test": {
			"post": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/WrappedResponse"
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "testapi",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "The details of the API to test.",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WrappedRequest"
						}
					}
				],
				"tags": [
					"test"
				],
				"summary": "Test the API."
			}
		},
		"/nodehandlers/{type}": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getNodeSpec",
				"tags": [
					"nodehandler"
				],
				"summary": "Gets the specification for a particular node handler.",
				"parameters": [
					{
						"in": "path",
						"name": "type",
						"type": "string",
						"description": "type of node handler to get the spec from.",
						"required": true
					}
				]
			}
		},
		"/nodehandlers": {
			"get": {
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "object"
							}
						}
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"operationId": "getNodeSpecs",
				"tags": [
					"nodehandler"
				],
				"summary": "Gets all specification for registered node handlers."
			}
		}
	},
	"definitions": {
		"Status": {
			"type": "object",
			"description": "enabled status of the component and whether or not it has any errors",
			"required": [
				"enabled"
			],
			"properties": {
				"enabled": {
					"type": "boolean"
				},
				"errors": {
					"items": {
						"type": "string"
					}
				}
			}
		},
		"API": {
			"title": "API",
			"properties": {
				"generated": {
					"type": "boolean"
				},
				"group": {
					"type": "string"
				},
				"path": {
					"type": "string"
				},
				"method": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"before": {},
				"after": {},
				"parameters": {
					"type": "object"
				},
				"txenabled": {
					"type": "boolean"
				},
				"enabled": {
					"type": "boolean"
				},
				"sort": {
					"type": "integer"
				},
				"response": {
					"type": "object"
				},
				"singular": {
					"type": "string"
				},
				"plural": {
					"type": "string"
				},
				"pre": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"post": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"nickname": {
					"type": "string"
				},
				"key": {
					"type": "string"
				},
				"filename": {
					"type": "string"
				},
				"timestamp": {
					"type": "string"
				}
			},
			"required": [
				"group",
				"path",
				"method",
				"description",
				"enabled"
			]
		},
		"GroupSummary": {
			"title": "GroupSummary",
			"properties": {
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"endpointCount": {
					"type": "number"
				},
				"status": {
					"$ref": "#/definitions/Status"
				}
			},
			"required": [
				"id",
				"name",
				"endpointCount"
			]
		},
		"ServerConfiguration": {
			"title": "Server Configuration",
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"content": {
					"type": "string"
				}
			},
			"required": [
				"name"
			]
		},
		"Connector": {
			"title": "Connector",
			"properties": {
				"name": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"version": {
					"type": "string"
				},
				"isServiceConnector": {
					"type": "boolean"
				}
			},
			"required": [
				"name",
				"description"
			]
		},
		"CredentialDetail": {
			"title": "Credential Detail",
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"status": {
					"type": "object",
					"properties": {
						"credential": {
							"type": "string"
						},
						"action": {
							"type": "string"
						}
					}
				}
			},
			"required": [
				"name"
			]
		},
		"Endpoints": {
			"type": "object",
			"description": "One or more Swagger (OpenAPI) specification documents"
		},
		"FlowValidateResponse": {
			"type": "object"
		},
		"Model": {
			"title": "Model",
			"properties": {
				"name": {
					"type": "string"
				},
				"fields": {
					"type": "object"
				},
				"connector": {
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						}
					},
					"required": [
						"name"
					]
				},
				"metadata": {
					"type": "object"
				},
				"autogen": {
					"type": "boolean"
				},
				"actions": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"disabledActions": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"plural": {
					"type": "string"
				},
				"singular": {
					"type": "string"
				},
				"cache": {
					"type": "boolean"
				},
				"before": {},
				"after": {},
				"pre": {},
				"post": {},
				"before$METHOD$": {},
				"after$METHOD$": {},
				"beforeEvent": {
					"type": "string"
				},
				"afterEvent": {
					"type": "string"
				},
				"eventTransformer": {},
				"before$METHOD$Event": {},
				"after$METHOD$Event": {},
				"$METHOD$eventTransformer": {},
				"documented": {
					"type": "boolean"
				},
				"description": {
					"type": "string"
				},
				"createDescription": {},
				"updateDescription": {},
				"deleteDescription": {},
				"distinctDescription": {},
				"findByIDDescription": {},
				"findAndModifyDescription": {},
				"findAllDescription": {},
				"countDescription": {},
				"upsertDescription": {},
				"queryDescription": {}
			},
			"required": [
				"fields",
				"name"
			]
		},
		"ProjectSummary": {
			"title": "Service Summary",
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"version": {
					"type": "string"
				},
				"author": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"license": {
					"type": "string"
				},
				"apikey": {
					"type": "string"
				},
				"apiPrefixSecurity": {
					"type": "string"
				}
			},
			"required": [
				"name"
			]
		},
		"Schema": {
			"$ref": "#"
		},
		"SystemConfig": {
			"title": "System Configuration",
			"type": "object",
			"properties": {
				"productName": {
					"type": "string"
				},
				"productVersion": {
					"type": "string"
				},
				"productRelease": {
					"type": "string"
				},
				"apiPrefix": {
					"type": "string"
				}
			}
		},
		"SystemStatus": {
			"title": "System Status",
			"type": "object",
			"properties": {
				"statusMessage": {
					"type": "string"
				}
			},
			"required": [
				"statusMessage"
			]
		},
		"WrappedRequest": {
			"title": "Request Wrapper",
			"type": "object",
			"properties": {
				"path": {
					"type": "string"
				},
				"method": {
					"type": "string"
				},
				"followRedirects": {
					"type": "boolean"
				},
				"gzip": {
					"type": "boolean"
				},
				"headers": {
					"type": "object"
				},
				"params": {
					"type": "object",
					"properties": {
						"path": {
							"type": "object"
						},
						"query": {
							"type": "object"
						},
						"body": {
							"type": "object"
						}
					}
				}
			},
			"required": [
				"path",
				"method"
			]
		},
		"WrappedResponse": {
			"title": "Response Wrapper",
			"type": "object",
			"properties": {
				"success": {
					"type": "boolean"
				},
				"result": {
					"type": "object"
				},
				"responseTime": {
					"type": "integer"
				},
				"responseSize": {
					"type": "integer"
				},
				"response": {
					"type": "object",
					"properties": {
						"headers": {
							"type": "object"
						},
						"httpVersion": {
							"type": "string"
						},
						"url": {
							"type": "string"
						},
						"statusCode": {
							"type": "integer"
						}
					},
					"required": [
						"statusCode"
					]
				}
			},
			"required": [
				"success",
				"response",
				"responseTime"
			]
		}
	}
}
