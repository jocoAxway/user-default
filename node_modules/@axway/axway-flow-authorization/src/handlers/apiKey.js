const { status, States } = require('../status');
const { typeofCredential } = require('./handlerUtils');

/**
 * Do type specific initialization of the credential.
 * @param {object} config The config.
 * @param {object} credential The credential to initialize.
 */
function initCredential(config, credential) {
	const tkey = typeofCredential(credential.key);

	if (tkey === 'string') {
		// valid credential
		credential.status = status.ok();
		credential.token = credential.key;
	} else if (tkey === 'undefined') {
		throw new Error(`Invalid configuration for credential ${credential.name}. key must be non-null or empty string`);
	} else {
		// both types are non-null or empty but at least one is null. if either username or password is
		// null then credential is `none` and the action is `unauthorized`.
		credential.status = status({
			credential: States.credential.none,
			action: States.action.needsAPIKey
		});
	}
}

/**
 * Get the apikey auth token.
 * @param {object} credential The credential to get the token for.
 * @returns {*} The apikey auth token.
 */
function token(credential) {
	if (credential.token === undefined) {
		return null;
	} else {
		return credential.token;
	}
}

exports = module.exports = {
	initCredential,
	token
};
