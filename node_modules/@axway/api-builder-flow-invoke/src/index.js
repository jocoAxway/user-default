const { handler: CodeblockNode, spec: CodeblockNodeSpec } = require('./codeblockNode');
const { handler: APIBuilderModelNode, spec: APIBuilderModelNodeSpec } = require('./arrowModelNode');
const CodeblockMetadata = require('./codeblockmetadata');
const schemas = require('axway-schema');
const metadata = require('../codeblockmetadata.json');
const upgrade = require('./upgrade');

const registeredNodeHandlers = {
	models: [],
	legacyModel: []
};

// setup schemas. axway-schema already has flowschema.json loaded from axway-flow
schemas.register(metadata).loadSync();

function _registerCodeblockNodeHandler(apibuilder) {
	const uri = apibuilder.flowManager.formatNodeHandlerUri('api-builder-flow-invoke', 'codeblock');
	apibuilder.flowManager.registerNode(uri,
		CodeblockNode.bind(null, apibuilder),
		CodeblockNodeSpec.bind(null, apibuilder)
	);
}

function _unregisterCodeblockNodeHandler(apibuilder) {
	const uri = apibuilder.flowManager.formatNodeHandlerUri('api-builder-flow-invoke', 'codeblock');
	apibuilder.flowManager.unregisterNode(uri);
}

function _registerModelNodeHandler(apibuilder) {
	Object.keys(apibuilder.models).forEach(modelName => {
		const model = apibuilder.getModel(modelName, true);
		const uri = apibuilder.flowManager.formatNodeHandlerUri('api-builder-flow-invoke', `model/${modelName}`);
		apibuilder.flowManager.registerNode(uri,
			APIBuilderModelNode.bind(null, apibuilder, model),
			APIBuilderModelNodeSpec.bind(null, apibuilder, model)
		);
		registeredNodeHandlers.models.push(uri);
	});
}

function _unregisterModelNodeHandler(apibuilder) {
	registeredNodeHandlers.models.forEach(uri => {
		apibuilder.flowManager.unregisterNode(uri);
	});
	registeredNodeHandlers.models = [];
}

function register(apibuilder) {
	upgrade.register(apibuilder);
	_registerCodeblockNodeHandler(apibuilder);
	_registerModelNodeHandler(apibuilder);
}

function unregister(apibuilder) {
	upgrade.unregister(apibuilder);
	_unregisterCodeblockNodeHandler(apibuilder);
	_unregisterModelNodeHandler(apibuilder);
}

exports = module.exports = {
	register,
	unregister,
	CodeblockMetadata
};
