
/**
 * this is a auth strategy which will use the Authorization
 * header where the key is the username and the password is
 * blank (as md5 digest of the two per the HTTP Basic Auth spec)
 */
function HeaderAuthBasicAuthStrategy(server) {
	this.config = server.config;
}

HeaderAuthBasicAuthStrategy.prototype.validateRequest = function (req) {
	var key = req.headers.authorization;
	if (!key) {
		return false;
	}
	// username is APIKey value, password is blank
	var expected = 'Basic ' + Buffer.from(this.config.apikey + ':').toString('base64');
	return expected === key;
};

HeaderAuthBasicAuthStrategy.prototype.getSwaggerSecurity = function () {
	return {
		securityDefinitions: {
			basicAuth: {
				type: 'basic',
				description: 'Require authorized access to API'
			}
		},
		security: [{
			basicAuth: []
		}]
	};
};

HeaderAuthBasicAuthStrategy.prototype.applyCredentialsForTest = function (opts) {
	opts.auth = {
		username: this.config.apikey,
		password: '',
		sendImmediately: true
	};
};

module.exports = HeaderAuthBasicAuthStrategy;
