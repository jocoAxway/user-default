module.exports = (Connector, utils) => {
	return {
		create: (Model, values, next) => {
			utils.execComposite({
				method: 'create',
				isWrite: true,
				isCollection: false,
				Model: Model,
				arg: values,
				next: next
			});
		},
		count: function (Model, options, next) {
			Connector.prototype.count.call(this, Model, { limit: 1000, options }, next);
		},
		delete: (Model, instance, next) => {
			utils.execComposite({
				method: 'delete',
				isWrite: true,
				isCollection: false,
				Model: Model,
				arg: instance,
				next: next
			});
		},
		findAll: function (Model, next) {
			utils.execComposite({ method: 'findAll', isWrite: false, isCollection: true, Model: Model, arg: next });
		},
		findByID: (Model, value, next) => {
			utils.execComposite({
				method: 'findByID',
				isWrite: false,
				isCollection: false,
				Model: Model,
				arg: utils.checkParse(value, false),
				next: next
			});
		},
		query: (Model, options, next) => {
			utils.execComposite({
				method: 'query',
				isWrite: false,
				isCollection: true,
				Model: Model,
				arg: options,
				next: next
			});
		},
		save: (Model, instance, next) => {
			utils.execComposite({
				method: 'save',
				isWrite: true,
				isCollection: false,
				Model: Model,
				arg: instance,
				next: next
			});
		}
	};
};
