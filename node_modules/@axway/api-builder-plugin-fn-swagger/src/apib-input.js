const prepare = require('./utils/prepare-request');
const uriBuilder = require('./utils/uri-builder');

/**
 * The boundary between API Builder Flow and the plugin..
 * Adjusts API Builder request data passed from the flows to the requester format.
 *
 * @param {object} req request data passed from API Builder flow to the requester
 * @param {string} inputMetadata metadata that contains everything needed to create the request to third party service
 * @param {string} inputMetadata.method the name of the invoked operation
 * @param {object} inputMetadata.metadata subset form the flownode specification needed to build the request to the third party service.
 * @param {object} inputMetadata.config flow-node configuration
 * @param {object} logger logger
 *
 * @returns {object} data structure suitable for making http request with requester
 */
module.exports = (req, inputMetadata, logger) => {
	const { method, metadata, config } = inputMetadata;
	const endpointMetadata = metadata.methods[method];

	const { query, path, header, body } = prepare({
		requestData: req.params || {},
		authorizationData: req.authorizations,
		endpointMetadata
	}, logger);
	const url = uriBuilder({
		queryData: query,
		pathsData: path,
		uriMetadata: metadata.uri,
		methodPath: endpointMetadata.path,
		uri: config.pluginConfig && config.pluginConfig.uri
	});

	return {
		method: endpointMetadata.httpMethod,
		url,
		headers: header,
		body
	};
};
