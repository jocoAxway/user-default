const FlowNodeError = require('./utils/FlowNodeError');

/**
 * The boundary between API Builder Flow and the plugin.
 * Adjusts data obtained from end service by the requester and pass it back to the API Builder service.
 *
 * @param {function} cb structure with functions that is used to return back the execution to API Builder
 * @param {object} err err response passed by requester that denotes the result of the execution.
 * @param {object} reqOutput success response passed by requester that denotes the result of the execution.
 * @returns {*} when done just returns the execution flow to the invoking function
 */
module.exports = (cb, err, reqOutput) => {
	if (!cb) {
		throw new Error('A callback must be provided to set the outcome of current execution');
	}
	if (err) {
		return cb.error(null, new FlowNodeError(err));
	}
	const { receiveBody, resp: { response, body } } = reqOutput;
	const statusCode = response.statusCode;

	if (statusCode) {
		const output = cb[statusCode] ? statusCode : 'default';
		const result = {
			status: statusCode,
			headers: response.headers
		};
		if (receiveBody) {
			result.data = body;
		}
		return cb[output](null, result);
	} else {
		return cb.error(null, new FlowNodeError(response.error));
	}
};
