const makeRequest = require('./requester');
const apibInput = require('./apib-input');
const apibOutput = require('./apib-output');
const FlowNodeError = require('./utils/FlowNodeError');

/**
 * Constructs the actions that will be executed for specific function configured in the flow.
 *
 * @param {Object} inputMetadata metadata that contains info for input creation. Build with nodehandler-utils.
 * @param {string} inputMetadata.method the name of the invoked operation.
 * @param {object} inputMetadata.metadata build with nodehandler-utils. Subset of the flow-node specification needed to build the request to the third party service.
 * @param {object} inputMetadata.config flow-node configuration.
 * @param {object} req the request data comming from the flow
 * @param {object} cb the callback that returns the execution to API Builder flow
 * @param {Object} options options passed from the flow manager
 * @param {Object} options.logger logger scoped to the context of the current flow
 * @returns {*} when done just returns the execution flow to the invoking function
 */
module.exports = (inputMetadata, req, cb, options) => {
	const { logger } = options;

	let input;
	try {
		input = apibInput(req, inputMetadata, logger);
		input.config = inputMetadata.config.requesterConfig;
	} catch (ex) {
		return cb.error(null, new FlowNodeError(ex));
	}
	makeRequest(input, apibOutput.bind(null, cb), logger);
};
